pipeline {
  agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        metadata:
          name: build-server
        spec:
          containers:
            - name: maven
              image: maven:alpine
              command: 
               - cat
              tty: true
            - name: kubectl
              image: alpine/k8s:1.25.14
              command:
                - cat
              tty: true
            - name: dind
              image: docker:20-dind
              securityContext:
                privileged: true
              volumeMounts:
                - name: dind-storage
                  mountPath: /var/lib/docker
          volumes:
            - name: efs-volume
              persistentVolumeClaim:
                claimName: efs-pvc 
            - name: dind-storage
              emptyDir: {}
        '''    
    }
  }
    environment {
        //artifact deployment S3 bucket.    
        bucket = "confluence-assessments-task-4-enquizit-2022" 
        //artifact deployment bucket region          
        region = "us-east-1"  
        //artifact upload bucket region. (optional)                    
        region1 = "us-east-2" 
        //aws credentials                    
        aws_credential = "s3-profile" //aws credentials 
        // Dockerhub credentials to push and pull images. 
        DOCKERHUB_CREDENTIALS = "dockerhub"
        KUBERNETES_CREDENTIALS  = 'kubeernetes-seccret'
    }
  stages {
    stage('Build-Jar-file') {
      steps {
        container('maven') {
          sh 'mvn package'
        }
      }
    }
  stage('Publish Artifact To S3') {
          steps {
          container('maven') {
              sh'''
               cp ./target/LoginWebApp-1.war  .
              '''
            
              withAWS(region:'us-east-1', credentials: "${aws_credential}") {
                  s3Upload(file:'LoginWebApp-1.war', bucket:'artifact-bucket-665693299603-us-east-1', path:'target/LoginWebApp-1.war')
        }
            
              
              
           
        }
    }
  }
stage('Retrive Artifact To S3') {
          steps {
          container('dind') {
           
            
              withAWS(region:'us-east-1', credentials: "${aws_credential}") {
                  s3Download(file:'LoginWebApp-1.war', bucket:'artifact-bucket-665693299603-us-east-1', path:'.', force: true)
             sh '''
               docker build -t samplewebapp:latest .
               docker tag samplewebapp ranaziauddin/samplewebapp:latest
              '''
        }
            
               
              
           
        }
    }
  }
    stage('Run Command') {
      steps {
        container('kubectl') {
          withKubeConfig([credentialsId: "${KUBERNETES_CREDENTIALS}" ,
                    serverUrl: 'https://BF940C2362D0B0FBF08656E462353508.gr7.us-east-1.eks.amazonaws.com',
                    ]) {
                 sh 'kubectl get pods --namespace=team-cicd-controlplane'
        }
      }
    }
  }
}
}
