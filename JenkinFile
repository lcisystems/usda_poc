pipeline {
  agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: maven
            image: maven:alpine
            command:
            - cat
            tty: true
         

        '''
    }
  }
  stages {
    stage('Clone') {
      steps {
        container('maven') {
          git branch: 'eks-dev', changelog: false, poll: false, url: 'https://github.com/lcisystems/usda_poc.git'
        }
      }
    }  
    stage('Build-Jar-file') {
      steps {
        container('maven') {
          sh 'mvn package'
        }
      }
    }
    stage('Build-Docker-Image') {
      agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        metadata:
          name: kaniko-demo
        spec:
          containers:
          - name: kaniko-demo
            image: gcr.io/kaniko-project/executor:latest
            args: ["--context=git://https://github.com/lcisystems/usda_poc.git",
                    "--destination=ranaziauddin/samplewebapp:latest",
                    "--dockerfile=Dockerfile"]
            volumeMounts:
              - name: kaniko-secret
                mountPath: /kaniko/.docker
          restartPolicy: Never
          volumes:
            - name: kaniko-secret
              secret:
                secretName: reg-credentials
                items:
                  - key: .dockerconfigjson
                    path: config.json
         

        '''
    }
  }
      steps {
        container('maven') {
          sh 'echo building image'
        }
    }
      }
    }
}

